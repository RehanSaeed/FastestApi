name: Build

on:
  schedule:
    - cron: '0 5 * * *'
  push:
    branches: main
  pull_request:
  release:
    types:
      - published

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
    - name: 'Git Fetch Tags'
      run: git fetch --tags
      shell: pwsh
    - name: 'Install .NET Core SDK'
      uses: actions/setup-dotnet@v1
    - name: 'Dotnet Tool Restore'
      run: dotnet tool restore
      shell: pwsh
    - name: 'Dotnet Cake Build'
      run: dotnet cake --target=Build
      shell: pwsh
    - name: 'Dotnet Cake Test'
      run: dotnet cake --target=Test
      shell: pwsh
    - name: 'Dotnet Cake Publish'
      run: dotnet cake --target=Publish
      shell: pwsh
    - name: 'Publish Artefacts'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{matrix.os}}
        path: './Artefacts'

  docker:
    name: Docker-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
    - name: 'Git Fetch Tags'
      run: git fetch --tags
      shell: pwsh
    - name: 'Install .NET Core SDK'
      uses: actions/setup-dotnet@v1
    - name: 'Dotnet Tool Restore'
      run: dotnet tool restore
      shell: pwsh
    - name: 'Install QEMU'
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: 'Available platforms'
      run: echo ${{steps.qemu.outputs.platforms}}
    - name: 'Install Docker BuildX'
      uses: docker/setup-buildx-action@v1
    - name: 'Docker Login'
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: echo $env:DOCKER_PASSWORD | docker login --username "$($env:DOCKER_USERNAME)" --password-stdin
      shell: pwsh
    - name: 'Docker Login GitHub'
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      env:
        DOCKER_REGISTRY: ghcr.io
        DOCKER_USERNAME: ${{ github.actor }}
        DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: echo $env:DOCKER_PASSWORD | docker login "$($env:DOCKER_REGISTRY)" --username "$($env:DOCKER_USERNAME)" --password-stdin
      shell: pwsh
    - name: 'Dotnet Cake DockerBuild'
      run: dotnet cake --target=DockerBuild --tag=${{secrets.DOCKER_USERNAME}}/fastestapi --push=${{github.ref == 'refs/heads/main' || github.event_name == 'release'}}
      shell: pwsh
    #- name: 'Scan'
    #  run: docker scan nginx:latest
    #  shell: pwsh
